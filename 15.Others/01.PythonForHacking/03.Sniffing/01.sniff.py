import socket
import sys
from struct import *


def eth_addr(a):
    b = '%.2x %.2x %.2x %.2x %.2x %.2x' % (ord(a[0]), ord(
        a[1]), ord(a[2]), ord(a[3]), ord(a[4]), ord(a[5]))
    return b


try:
    s = socket.socket(socket.AF_PACKET, socket.SOCK_RAW, socket.ntohs(0x0003))
except socket.error, msg:
    print('socket could be created Error code :' +
          str(msg[0]) + 'Message ' + msg[1])
    sys.exit()
# recive a packet

while True:
    packet = s.recvfrom(65565)
    # packet string from tuple
    packet = packet[0]

    # pareser ether header:
    eth_length = 14
    eth_header = packet[:eth_length]
    eth = unpack('!6s6sH', eth_header)
    eth_protocol = socket.ntohs(eth[2])
    print('Destination MAC: ' + eth_addr(packet[0:6] + 'Source MAC: ' + eth_addr(
        packet[6:12])) + ' protocol ' + str(eth_protocol))